{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/cryptotracker/src/PriceChange.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PriceChangeContext = /*#__PURE__*/createContext({\n  btcPriceChange: 0,\n  ethPriceChange: 0,\n  bnbPriceChange: 0,\n  adaPriceChange: 0,\n  xrpPriceChange: 0,\n  ltcPriceChange: 0\n});\nconst PriceChangeProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [btcPriceChange, setBtcPriceChange] = useState(0);\n  const [ethPriceChange, setEthPriceChange] = useState(0);\n  const [bnbPriceChange, setBnbPriceChange] = useState(0);\n  const [adaPriceChange, setAdaPriceChange] = useState(0);\n  const [xrpPriceChange, setXrpPriceChange] = useState(0);\n  const [ltcPriceChange, setLtcPriceChange] = useState(0);\n  const priceChangePercent = data.priceChangePercent;\n  const changeStyles = {\n    color: priceChangePercent >= 0 ? \"green\" : \"red\"\n  };\n  useEffect(() => {\n    const fetchData = async () => {\n      const fetchPriceChange = async symbol => {\n        const URL = `https://api.binance.com/api/v3/ticker/24hr?symbol=${symbol}USDT`;\n        const response = await fetch(URL);\n        const data = await response.json();\n        return data.priceChangePercent;\n      };\n      setBtcPriceChange(await fetchPriceChange(\"BTC\"));\n      setEthPriceChange(await fetchPriceChange(\"ETH\"));\n      setBnbPriceChange(await fetchPriceChange(\"BNB\"));\n      setAdaPriceChange(await fetchPriceChange(\"ADA\"));\n      setXrpPriceChange(await fetchPriceChange(\"XRP\"));\n      setLtcPriceChange(await fetchPriceChange(\"LTC\"));\n    };\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(PriceChangeContext.Provider, {\n    value: {\n      btcPriceChange,\n      ethPriceChange,\n      bnbPriceChange,\n      adaPriceChange,\n      xrpPriceChange,\n      ltcPriceChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(PriceChangeProvider, \"JLCsfnzOwRWLYpUH7YuU+KItPr4=\");\n_c = PriceChangeProvider;\nexport { PriceChangeContext, PriceChangeProvider };\nvar _c;\n$RefreshReg$(_c, \"PriceChangeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","PriceChangeContext","btcPriceChange","ethPriceChange","bnbPriceChange","adaPriceChange","xrpPriceChange","ltcPriceChange","PriceChangeProvider","children","setBtcPriceChange","setEthPriceChange","setBnbPriceChange","setAdaPriceChange","setXrpPriceChange","setLtcPriceChange","priceChangePercent","data","changeStyles","color","fetchData","fetchPriceChange","symbol","URL","response","fetch","json"],"sources":["/home/oem/Desktop/cryptotracker/src/PriceChange.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\n\nconst PriceChangeContext = createContext({\n    btcPriceChange: 0,\n    ethPriceChange: 0,\n    bnbPriceChange: 0,\n    adaPriceChange: 0,\n    xrpPriceChange: 0,\n    ltcPriceChange: 0,\n});\n\nconst PriceChangeProvider = ({ children }) => {\n    const [btcPriceChange, setBtcPriceChange] = useState(0);\n    const [ethPriceChange, setEthPriceChange] = useState(0);\n    const [bnbPriceChange, setBnbPriceChange] = useState(0);\n    const [adaPriceChange, setAdaPriceChange] = useState(0);\n    const [xrpPriceChange, setXrpPriceChange] = useState(0);\n    const [ltcPriceChange, setLtcPriceChange] = useState(0);\n    const priceChangePercent = data.priceChangePercent;\n    const changeStyles = {\n        color: priceChangePercent >= 0 ? \"green\" : \"red\"\n    };\n\n\n    useEffect(() => {\n        const fetchData = async () => {\n            const fetchPriceChange = async (symbol) => {\n                const URL = `https://api.binance.com/api/v3/ticker/24hr?symbol=${symbol}USDT`;\n                const response = await fetch(URL);\n                const data = await response.json();\n                return data.priceChangePercent;\n            };\n\n            setBtcPriceChange(await fetchPriceChange(\"BTC\"));\n            setEthPriceChange(await fetchPriceChange(\"ETH\"));\n            setBnbPriceChange(await fetchPriceChange(\"BNB\"));\n            setAdaPriceChange(await fetchPriceChange(\"ADA\"));\n            setXrpPriceChange(await fetchPriceChange(\"XRP\"));\n            setLtcPriceChange(await fetchPriceChange(\"LTC\"));\n        };\n        fetchData();\n    }, []);\n\n    return (\n        <PriceChangeContext.Provider\n            value={{\n                btcPriceChange,\n                ethPriceChange,\n                bnbPriceChange,\n                adaPriceChange,\n                xrpPriceChange,\n                ltcPriceChange,\n            }}\n        >\n            {children}\n        </PriceChangeContext.Provider>\n    );\n};\n\nexport { PriceChangeContext, PriceChangeProvider };\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AAElE,MAAMC,kBAAkB,gBAAGH,aAAa,CAAC;EACrCI,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE,CAAC;EACjBC,cAAc,EAAE;AACpB,CAAC,CAAC;AAEF,MAAMC,mBAAmB,GAAG,QAAkB;EAAA;EAAA,IAAjB;IAAEC;EAAS,CAAC;EACrC,MAAM,CAACP,cAAc,EAAEQ,iBAAiB,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACI,cAAc,EAAEQ,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACK,cAAc,EAAEQ,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACM,cAAc,EAAEQ,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACO,cAAc,EAAEQ,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAM,CAACQ,cAAc,EAAEQ,iBAAiB,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMiB,kBAAkB,GAAGC,IAAI,CAACD,kBAAkB;EAClD,MAAME,YAAY,GAAG;IACjBC,KAAK,EAAEH,kBAAkB,IAAI,CAAC,GAAG,OAAO,GAAG;EAC/C,CAAC;EAGDhB,SAAS,CAAC,MAAM;IACZ,MAAMoB,SAAS,GAAG,YAAY;MAC1B,MAAMC,gBAAgB,GAAG,MAAOC,MAAM,IAAK;QACvC,MAAMC,GAAG,GAAI,qDAAoDD,MAAO,MAAK;QAC7E,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;QACjC,MAAMN,IAAI,GAAG,MAAMO,QAAQ,CAACE,IAAI,EAAE;QAClC,OAAOT,IAAI,CAACD,kBAAkB;MAClC,CAAC;MAEDN,iBAAiB,CAAC,MAAMW,gBAAgB,CAAC,KAAK,CAAC,CAAC;MAChDV,iBAAiB,CAAC,MAAMU,gBAAgB,CAAC,KAAK,CAAC,CAAC;MAChDT,iBAAiB,CAAC,MAAMS,gBAAgB,CAAC,KAAK,CAAC,CAAC;MAChDR,iBAAiB,CAAC,MAAMQ,gBAAgB,CAAC,KAAK,CAAC,CAAC;MAChDP,iBAAiB,CAAC,MAAMO,gBAAgB,CAAC,KAAK,CAAC,CAAC;MAChDN,iBAAiB,CAAC,MAAMM,gBAAgB,CAAC,KAAK,CAAC,CAAC;IACpD,CAAC;IACDD,SAAS,EAAE;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,oBACI,QAAC,kBAAkB,CAAC,QAAQ;IACxB,KAAK,EAAE;MACHlB,cAAc;MACdC,cAAc;MACdC,cAAc;MACdC,cAAc;MACdC,cAAc;MACdC;IACJ,CAAE;IAAA,UAEDE;EAAQ;IAAA;IAAA;IAAA;EAAA,QACiB;AAEtC,CAAC;AAAC,GA9CID,mBAAmB;AAAA,KAAnBA,mBAAmB;AAgDzB,SAASP,kBAAkB,EAAEO,mBAAmB;AAAG;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}