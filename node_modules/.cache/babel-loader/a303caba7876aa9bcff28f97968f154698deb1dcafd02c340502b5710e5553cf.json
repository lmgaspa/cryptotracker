{"ast":null,"code":"var _jsxFileName = \"/home/oem/Desktop/cryptotracker/src/PriceCoins.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CoinsPriceContext = /*#__PURE__*/createContext({});\nexport function CoinsPriceProvider(_ref) {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [btcPrice, setBtcPrice] = useState(0);\n  const [btcPreviousPrice, setBtcPreviousPrice] = useState(0);\n  const [ethPrice, setEthPrice] = useState(0);\n  const [ethPreviousPrice, setEthPreviousPrice] = useState(0);\n  const [bnbPrice, setBnbPrice] = useState(0);\n  const [bnbPreviousPrice, setBnbPreviousPrice] = useState(0);\n  const [xrpPrice, setXrpPrice] = useState(0);\n  const [xrpPreviousPrice, setXrpPreviousPrice] = useState(0);\n  const [adaPrice, setAdaPrice] = useState(0);\n  const [adaPreviousPrice, setAdaPreviousPrice] = useState(0);\n  const [ltcPrice, setLtcPrice] = useState(0);\n  const [ltcPreviousPrice, setLtcPreviousPrice] = useState(0);\n  const [dogePrice, setDogePrice] = useState(0);\n  const [dogePreviousPrice, setDogePreviousPrice] = useState(0);\n  const [dotPrice, setDotPrice] = useState(0);\n  const [dotPreviousPrice, setDotPreviousPrice] = useState(0);\n  useEffect(() => {\n    const intervalId = setInterval(async () => {\n      const [btcResponse, ethResponse, bnbResponse, xrpResponse, adaResponse, ltcResponse, dogeResponse, dotResponse] = await Promise.all([fetch('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT'), fetch('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT'), fetch('https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT'), fetch('https://api.binance.com/api/v3/ticker/price?symbol=XRPUSDT'), fetch('https://api.binance.com/api/v3/ticker/price?symbol=ADAUSDT'), fetch('https://api.binance.com/api/v3/ticker/price?symbol=LTCUSDT'), fetch('https://api.binance.com/api/v3/ticker/price?symbol=DOGEUSDT'), fetch('https://api.binance.com/api/v3/ticker/price?symbol=DOTUSDT')]);\n      const [btcData, ethData, bnbData, xrpData, adaData, ltcData, dogeData, dotData] = await Promise.all([btcResponse.json(), ethResponse.json(), bnbResponse.json(), xrpResponse.json(), adaResponse.json(), ltcResponse.json(), dogeResponse.json(), dotResponse.json()]);\n      const btcNewPrice = parseFloat(btcData.price).toFixed(2);\n      const btcPriceString = btcNewPrice.toString();\n      const btcFormattedPrice = btcPriceString.length > 6 ? btcPriceString.slice(0, btcPriceString.length - 6) + \",\" + btcPriceString.slice(btcPriceString.length - 6) : btcPriceString;\n      const ethNewPrice = parseFloat(ethData.price).toFixed(2);\n      const ethPriceString = ethNewPrice.toString();\n      const ethFormattedPrice = ethPriceString.length > 6 ? ethPriceString.slice(0, ethPriceString.length - 6) + \",\" + ethPriceString.slice(ethPriceString.length - 6) : ethPriceString;\n      const bnbNewPrice = parseFloat(bnbData.price).toFixed(2);\n      const xrpNewPrice = parseFloat(xrpData.price).toFixed(2);\n      const adaNewPrice = parseFloat(adaData.price).toFixed(2);\n      const ltcNewPrice = parseFloat(ltcData.price).toFixed(2);\n      const dogeNewPrice = parseFloat(dogeData.price).toFixed(2);\n      const dotNewPrice = parseFloat(dotData.price).toFixed(2);\n      setBtcPreviousPrice(btcPrice);\n      setBtcPrice(btcFormattedPrice);\n      setEthPreviousPrice(ethPrice);\n      setEthPrice(ethFormattedPrice);\n      setBnbPreviousPrice(bnbPrice);\n      setBnbPrice(bnbNewPrice);\n      setXrpPreviousPrice(xrpPrice);\n      setXrpPrice(xrpNewPrice);\n      setAdaPreviousPrice(adaPrice);\n      setAdaPrice(adaNewPrice);\n      setLtcPreviousPrice(ltcPrice);\n      setLtcPrice(ltcNewPrice);\n      setDogePreviousPrice(dogePrice);\n      setDogePrice(dogeNewPrice);\n      setDotPreviousPrice(dotPrice);\n      setDotPrice(dotNewPrice);\n    }, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(CoinsPriceContext.Provider, {\n    value: {\n      btcPrice,\n      ethPrice,\n      bnbPrice,\n      xrpPrice,\n      adaPrice,\n      ltcPrice,\n      dogePrice,\n      dotPrice\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n_s(CoinsPriceProvider, \"cCDzn44DDZj2IT+H6zu5q/u88G4=\");\n_c = CoinsPriceProvider;\nvar _c;\n$RefreshReg$(_c, \"CoinsPriceProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","CoinsPriceContext","CoinsPriceProvider","children","btcPrice","setBtcPrice","btcPreviousPrice","setBtcPreviousPrice","ethPrice","setEthPrice","ethPreviousPrice","setEthPreviousPrice","bnbPrice","setBnbPrice","bnbPreviousPrice","setBnbPreviousPrice","xrpPrice","setXrpPrice","xrpPreviousPrice","setXrpPreviousPrice","adaPrice","setAdaPrice","adaPreviousPrice","setAdaPreviousPrice","ltcPrice","setLtcPrice","ltcPreviousPrice","setLtcPreviousPrice","dogePrice","setDogePrice","dogePreviousPrice","setDogePreviousPrice","dotPrice","setDotPrice","dotPreviousPrice","setDotPreviousPrice","intervalId","setInterval","btcResponse","ethResponse","bnbResponse","xrpResponse","adaResponse","ltcResponse","dogeResponse","dotResponse","Promise","all","fetch","btcData","ethData","bnbData","xrpData","adaData","ltcData","dogeData","dotData","json","btcNewPrice","parseFloat","price","toFixed","btcPriceString","toString","btcFormattedPrice","length","slice","ethNewPrice","ethPriceString","ethFormattedPrice","bnbNewPrice","xrpNewPrice","adaNewPrice","ltcNewPrice","dogeNewPrice","dotNewPrice","clearInterval"],"sources":["/home/oem/Desktop/cryptotracker/src/PriceCoins.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\n\nexport const CoinsPriceContext = createContext({});\n\nexport function CoinsPriceProvider({ children }) {\n  const [btcPrice, setBtcPrice] = useState(0);\n  const [btcPreviousPrice, setBtcPreviousPrice] = useState(0);\n  const [ethPrice, setEthPrice] = useState(0);\n  const [ethPreviousPrice, setEthPreviousPrice] = useState(0);\n  const [bnbPrice, setBnbPrice] = useState(0);\n  const [bnbPreviousPrice, setBnbPreviousPrice] = useState(0);\n  const [xrpPrice, setXrpPrice] = useState(0);\n  const [xrpPreviousPrice, setXrpPreviousPrice] = useState(0);\n  const [adaPrice, setAdaPrice] = useState(0);\n  const [adaPreviousPrice, setAdaPreviousPrice] = useState(0);\n  const [ltcPrice, setLtcPrice] = useState(0);\n  const [ltcPreviousPrice, setLtcPreviousPrice] = useState(0);\n  const [dogePrice, setDogePrice] = useState(0);\n  const [dogePreviousPrice, setDogePreviousPrice] = useState(0);\n  const [dotPrice, setDotPrice] = useState(0);\n  const [dotPreviousPrice, setDotPreviousPrice] = useState(0);\n\n  useEffect(() => {\n    const intervalId = setInterval(async () => {\n  \n      const [btcResponse, ethResponse, bnbResponse, xrpResponse, adaResponse, ltcResponse, dogeResponse, dotResponse] = await Promise.all([\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=BTCUSDT'),\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=ETHUSDT'),\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=BNBUSDT'),\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=XRPUSDT'),\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=ADAUSDT'),\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=LTCUSDT'),\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=DOGEUSDT'),\n        fetch('https://api.binance.com/api/v3/ticker/price?symbol=DOTUSDT'),\n      ]);\n  \n      const [btcData, ethData, bnbData, xrpData, adaData, ltcData, dogeData, dotData] = await Promise.all([\n        btcResponse.json(),\n        ethResponse.json(),\n        bnbResponse.json(),\n        xrpResponse.json(),\n        adaResponse.json(),\n        ltcResponse.json(),\n        dogeResponse.json(),\n        dotResponse.json(),\n      ]);\n  \n      const btcNewPrice = parseFloat(btcData.price).toFixed(2);\n      const btcPriceString = btcNewPrice.toString();\n      const btcFormattedPrice = btcPriceString.length > 6 ? btcPriceString.slice(0, btcPriceString.length - 6) + \",\" + btcPriceString.slice(btcPriceString.length - 6) : btcPriceString;\n  \n      const ethNewPrice = parseFloat(ethData.price).toFixed(2);\n      const ethPriceString = ethNewPrice.toString();\n      const ethFormattedPrice = ethPriceString.length > 6 ? ethPriceString.slice(0, ethPriceString.length - 6) + \",\" + ethPriceString.slice(ethPriceString.length - 6) : ethPriceString;\n\n      const bnbNewPrice = parseFloat(bnbData.price).toFixed(2);\n      const xrpNewPrice = parseFloat(xrpData.price).toFixed(2);\n      const adaNewPrice = parseFloat(adaData.price).toFixed(2);\n      const ltcNewPrice = parseFloat(ltcData.price).toFixed(2);\n      const dogeNewPrice = parseFloat(dogeData.price).toFixed(2);\n      const dotNewPrice = parseFloat(dotData.price).toFixed(2);\n  \n      setBtcPreviousPrice(btcPrice);\n      setBtcPrice(btcFormattedPrice);\n      \n      setEthPreviousPrice(ethPrice);\n      setEthPrice(ethFormattedPrice);\n      \n      setBnbPreviousPrice(bnbPrice);\n      setBnbPrice(bnbNewPrice);\n      \n      setXrpPreviousPrice(xrpPrice);\n      setXrpPrice(xrpNewPrice);\n      \n      setAdaPreviousPrice(adaPrice);\n      setAdaPrice(adaNewPrice);\n      \n      setLtcPreviousPrice(ltcPrice);\n      setLtcPrice(ltcNewPrice);\n\n      setDogePreviousPrice(dogePrice);\n      setDogePrice(dogeNewPrice);\n\n      setDotPreviousPrice(dotPrice);\n      setDotPrice(dotNewPrice);\n  \n    }, 5000);\n  \n    return () => clearInterval(intervalId);\n  }, []);\n\n  return (\n    <CoinsPriceContext.Provider\n      value={{\n        btcPrice,\n        ethPrice,\n        bnbPrice,\n        xrpPrice,\n        adaPrice,\n        ltcPrice,\n        dogePrice,\n        dotPrice\n      }}\n    >\n      {children}\n    </CoinsPriceContext.Provider>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}